spring:
  application:
    name: springboot-gcp-api
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
  
  # Conditional datasource configuration - only used when not using Firestore
  datasource:
    url: ${DATABASE_URL:jdbc:h2:mem:testdb}
    username: ${DATABASE_USERNAME:sa}
    password: ${DATABASE_PASSWORD:}
    driver-class-name: ${DATABASE_DRIVER:org.h2.Driver}
  
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:create-drop}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: ${JPA_DIALECT:org.hibernate.dialect.H2Dialect}
        format_sql: true
  
  h2:
    console:
      enabled: ${H2_CONSOLE_ENABLED:true}
      path: /h2-console
  
  # Firestore configuration
  cloud:
    gcp:
      project-id: ${GCP_PROJECT_ID:demo-project}
      firestore:
        enabled: ${GCP_FIRESTORE_ENABLED:true}
        project-id: ${GCP_PROJECT_ID:demo-project}
      sql:
        enabled: false  # Disable Cloud SQL to prevent auto-configuration conflicts

server:
  port: ${PORT:8080}
  servlet:
    context-path: ${CONTEXT_PATH:}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.example.api: ${LOG_LEVEL:INFO}
    org.springframework.web: ${LOG_LEVEL:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

---
spring:
  config:
    activate:
      on-profile: gcp
  
  # Disable JPA/SQL datasource for Firestore in GCP
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  
  cloud:
    gcp:
      project-id: ${GCP_PROJECT_ID}
      firestore:
        enabled: true
        project-id: ${GCP_PROJECT_ID}

---
spring:
  config:
    activate:
      on-profile: firestore
  
  # Disable JPA/SQL datasource for Firestore
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  
  cloud:
    gcp:
      project-id: ${GCP_PROJECT_ID:}
      firestore:
        enabled: true
        project-id: ${GCP_PROJECT_ID:}

# Logging configuration for Firestore
logging:
  level:
    com.google.cloud.firestore: INFO
    com.example.api: DEBUG
    root: INFO

---
spring:
  config:
    activate:
      on-profile: local
  
  # Enable H2 console for local development
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # Use H2 in-memory database for local development
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
